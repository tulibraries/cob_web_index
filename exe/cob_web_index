#!/usr/bin/env ruby
# frozen_string_literal: true

require "gli"
require "cob_web_index"

class App
  extend GLI::App

  program_desc "Wrapper cli app for indexing tul_cob app"

  version CobWebIndex::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc "Ingest files into solr endpoint using the web content traject config"
  arg_name "ingest_path", :optional
  command :ingest do |c|
    c.desc "Ingest files from gems fixtures (useful for development)"
    c.switch ["use-fixtures"], default_value: false

    c.desc "Delete docs before ingesting new ones"
    c.switch ["delete"], default_value: false

    desc "Ingest files into SOLR_URL using the web content traject config"
    c.action do |global_options, options, args|

      opts = {}

      if options[:delete]
        opts.merge!(delete: true)
      end

      if options["use-fixtures"]
        CobWebIndex::CLI.ingest_fixtures(opts)
      elsif args.empty?
        CobWebIndex::CLI.pull(opts)
      else
        CobWebIndex::CLI.ingest(opts.merge(ingest_path: args[0], delete_collection: true))
      end
    end
  end

  pre do |global, command, options, args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global, command, options, args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
